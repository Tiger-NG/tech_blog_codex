name: CI/CD - Nuxt Deploy to Debian (No Test)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js 24.4.1
        uses: actions/setup-node@v4
        with:
          node-version: "24.4.1"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Upload files to server (rsync)
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete --exclude=".git" --exclude="node_modules"
          path: ./
          remote_path: ${{ secrets.REMOTE_DIR }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
          remote_port: ${{ secrets.SSH_PORT }}

      # 把 Secret 先映射到 env，再用 if 判断 env 是否为空
      - name: Write .env to server
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
        if: ${{ env.ENV_FILE_CONTENT != '' }}
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cat > ${{ secrets.REMOTE_DIR }}/.env << 'EOF'
            ${{ env.ENV_FILE_CONTENT }}
            EOF

      - name: Run deploy.sh on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.REMOTE_DIR }}
            ./deploy.sh
